// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Ecommerce.Data.Migrations
{
    [DbContext(typeof(EcommerceContext))]
    internal class EcommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ecommerce.Model.Entities.Category", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(250);

                b.Property<int>("Sequence")
                    .HasMaxLength(10);

                b.HasKey("Id");

                b.ToTable("Category");
            });

            modelBuilder.Entity("Ecommerce.Model.Entities.Product", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd();

                b.Property<int>("CategoryId");

                b.Property<string>("Color")
                    .IsRequired();

                b.Property<string>("Description")
                    .IsRequired();

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(250);

                b.Property<string>("Size")
                    .IsRequired();

                b.HasKey("Id");

                b.HasIndex("CategoryId");

                b.ToTable("Product");
            });

            modelBuilder.Entity("Ecommerce.Model.Entities.Product", b =>
            {
                b.HasOne("Ecommerce.Model.Entities.Category", "Categories")
                    .WithMany("Products")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}